openapi: 3.0.0
info:
  title: ping
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /message/information:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
    post:
      summary: ''
      responses:
        '200':
          description: OK
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
  /message/bulle:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
          headers:
            Link:
              schema:
                type: string
              description: Le lien
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  rel:
                    type: string
                    enum:
                      - first
                      - last
                      - prev
                      - next
              examples: {}
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: range
          description: la dimension
        - schema:
            type: string
          in: header
          name: Content-Range
          description: |-
            offset - limit / count
            offset: the index of the first element returned by the query.
            limit: The index of the last element returned by the query.
            count: the total number of items in the collection.
        - schema:
            type: string
          in: header
          name: Accept-Range
          description: |-
            resource max
            resource: the type of the pagination (resource in use), ex: customer, order, account, ...
            max: the maximum number that can be requested at one time.
    post:
      summary: ''
      responses:
        '200':
          description: OK
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                wording:
                  type: string
                vision360:
                  type: boolean
                text:
                  type: string
                keyword:
                  type: array
                  items:
                    type: string
                picture:
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                begin:
                  type: object
                  format: date
                  example: 8/11/2019
                  required:
                    - day
                    - month
                    - year
                  properties:
                    day:
                      type: integer
                    month:
                      type: integer
                    year:
                      type: integer
                end:
                  type: object
                  example: 8/12/2020
                  properties:
                    day:
                      type: integer
                      minimum: 1
                      maximum: 31
                    month:
                      type: integer
                      minimum: 1
                      maximum: 12
                    year:
                      type: integer
                entite:
                  type: array
                  enum:
                    - '01'
                    - '02'
                    - '03'
                    - 8
                    - '70'
                  items:
                    type: integer
                canaux:
                  type: array
                  enum:
                    - WEB
                    - GAB
                    - RWD
                  items:
                    type: string
                priorite:
                  type: array
                  description: "Si GAB est sélectionné avec plusieurs messages, c'est obligatoire"
                  items:
                    type: integer
                encart:
                  type: object
                  description: "si une seule entité de fédération sélectionnée, l'encart apparaît"
                  properties:
                    federation:
                      type: boolean
                    agence:
                      type: boolean
                    listeClients:
                      type: object
                      properties:
                        id:
                          type: integer
                          maximum: 20000
                        client:
                          type: string
              required:
                - wording
                - vision360
                - text
                - begin
                - entite
                - canaux
            examples:
              example-1: {}
        description: Créer un message bulle
components:
  schemas: {}
