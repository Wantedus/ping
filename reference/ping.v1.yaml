openapi: 3.0.0
info:
  title: ping
  version: '1.0'
servers:
  - url: 'http://localhost:3000'
paths:
  /message/information/:
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
      description: |
        Get with id
    post:
      summary: ''
      responses:
        '200':
          description: OK
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                vision360:
                  type: boolean
                texte:
                  type: string
                keyword:
                  type: array
                  items:
                    type: string
                image:
                  type: array
                  items:
                    type: string
                debut:
                  type: string
                  format: date
                fin:
                  type: string
                  format: date
                entite:
                  type: array
                  items:
                    type: integer
                cannaux:
                  type: array
                  items:
                    type: string
                priorite:
                  type: integer
                encart:
                  type: object
                  properties:
                    federation:
                      type: boolean
                    agence:
                      type: string
                    listeClients:
                      type: array
                      items:
                        type: string
              required:
                - libelle
                - vision360
                - texte
                - debut
                - entite
                - cannaux
            examples:
              example-1: {}
    parameters: []
  /message/bulle:
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
        '206':
          description: Partial Content
          headers:
            Link:
              schema:
                type: string
              description: Le lien
          content:
            application/json:
              schema:
                type: object
                properties:
                  url:
                    type: string
                  rel:
                    type: string
                    enum:
                      - first
                      - last
                      - prev
                      - next
              examples: {}
        '400':
          description: Bad Request
          headers: {}
          content:
            application/json:
              schema:
                type: object
                properties:
                  reason:
                    type: string
      requestBody: {}
      parameters:
        - schema:
            type: string
          in: query
          name: range
          description: la dimension
        - schema:
            type: string
          in: header
          name: Content-Range
          description: |-
            offset - limit / count
            offset: the index of the first element returned by the query.
            limit: The index of the last element returned by the query.
            count: the total number of items in the collection.
        - schema:
            type: string
          in: header
          name: Accept-Range
          description: |-
            resource max
            resource: the type of the pagination (resource in use), ex: customer, order, account, ...
            max: the maximum number that can be requested at one time.
        - schema:
            type: string
          in: header
    post:
      summary: ''
      responses:
        '201':
          description: Created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                vision360:
                  type: boolean
                texte:
                  type: string
                keyword:
                  type: array
                  items:
                    type: string
                image:
                  type: array
                  uniqueItems: true
                  items:
                    type: string
                debut:
                  type: string
                  format: date
                  example: 8/11/2019
                fin:
                  type: string
                  format: date
                  example: 8/12/2020
                entite:
                  type: array
                  enum:
                    - '01'
                    - '02'
                    - '03'
                    - 8
                    - '70'
                  items:
                    type: integer
                canaux:
                  type: array
                  enum:
                    - WEB
                    - GAB
                    - RWD
                  items:
                    type: string
                priorite:
                  description: "Si GAB est sélectionné avec plusieurs messages, c'est obligatoire"
                  type: integer
                encart:
                  type: object
                  description: "si une seule entité de fédération sélectionnée, l'encart apparaît"
                  properties:
                    federation:
                      type: boolean
                    agence:
                      type: string
                    listeClients:
                      type: array
                      items:
                        type: string
              required:
                - libelle
                - vision360
                - texte
                - debut
                - entite
                - canaux
            examples:
              example-1:
                value:
                  libelle: example-1
                  vision360: true
                  texte: "Messade de type bulle d'exemple "
                  keyword:
                    - api
                    - esigelec
                    - ping
                  image:
                    - '? champ à complété pour le moment'
                  debut: 8/11/2019
                  fin: 8/12/2020
                  entite: '01'
                  canaux: WEB
                  priorite: 5
                  encart:
                    federation: true
                    agence: agence de rouen
                    listeClients:
                      id:
                        - 1
                        - 20
                        - 25
                        - 30
        description: Créer un message bulle
  '/message/information/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses:
        '200':
          description: OK
      description: Get with id
    put:
      summary: ''
      responses:
        '201':
          description: Created
      description: Put with ID
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                libelle:
                  type: string
                vision360:
                  type: boolean
                texte:
                  type: string
                keyword:
                  type: array
                  items:
                    type: string
                image:
                  type: array
                  items:
                    type: string
                debut:
                  type: string
                fin:
                  type: string
                entite:
                  type: array
                  items:
                    type: integer
                canaux:
                  type: array
                  items:
                    type: integer
                priorite:
                  type: string
                encart:
                  type: object
                  properties:
                    federation:
                      type: boolean
                    agence:
                      type: string
                    listeClients:
                      type: array
                      items:
                        type: string
  '/message/bulle/{id}':
    parameters:
      - type: string
        name: id
        in: path
        required: true
    get:
      summary: Your GET endpoint
      tags: []
      responses: {}
    put:
      summary: ''
      responses:
        '200':
          description: OK
      description: |
        Put bulle message with id
components:
  schemas: {}
